You decided against Material in favor of flex css directly. It's easier
https://material-ui.com/components/grid/
https://css-tricks.com/snippets/css/a-guide-to-flexbox/

Good descriptions of common regex
https://itnext.io/regular-expressions-tricks-you-should-know-2976c7bd1be3

How binary search trees work in JavaScript:
https://medium.com/javascript-in-plain-english/binary-search-tree-in-javascript-ca5aa7ba05de
Description of binary tree traversal
https://www.geeksforgeeks.org/tree-traversals-inorder-preorder-and-postorder/

D3 with images
http://bl.ocks.org/eesur/be2abfb3155a38be4de4

Instead look at using SVG directly. After all, you're not trying to do anything very complicated.
https://medium.com/@PepsRyuu/why-i-no-longer-use-d3-js-b8288f306c9a

const HEIGHT = 210, WIDTH = 500;
const X1 = 0, Y1 = 0, X2 = 200, Y2 = 200;
const STYLE = {
  stroke: "rgb(255,0,0)",
  strokeWidth: 2
};
// "stroke:rgb(255,0,0);stroke-width:2"
// <line x1="0" y1="0" x2="200" y2="200" style="stroke:rgb(255,0,0);stroke-width:2" />

<svg height={HEIGHT} width={WIDTH}>
  <line x1={X1} y1={Y1} x2={X2} y2={Y2} style={STYLE}></line>
</svg>

for a path with a cubic bezier curve
C (or c) x1,y1 x2,y2 x,y
<path
  d="M100,200  C150,50  400,100  500,200"
 fill="none" stroke="#F00" stroke-width="2px" ></path>
</svg>

// so you can take the above ^^ and in conjunction with eg
document.getElementById("aaron-judge-stat").getBoundingClientRect()
you can draw svg lines

and use paths to add a lil curve
https://vanseodesign.com/web-design/svg-paths-curve-commands/

You'll have to decide if you're drawing one big SVG or one per row, or one per connection
Prob easiest one big SVG. but then you'll also need the bounding rect of the whole tree to size the SVG container.

React Tree Graph
https://jpb12.github.io/react-tree-graph/

HR Homeruns
BA Batting Average
RBI Runs Batted In
WAR Wins Above Replacement
SLG Slugging
OBP On Base Percentage

courtesy https://www.baseball-reference.com/players/s/sanchga02.shtml
September 24, 2019


1 - make a card for a player that shows the photo and their name

2 - put them on the page side-by-side. Simply make it responsive. Use flex if need be.

3 - make the list a horizontally scrollable list. to do this, you can add more players or double up

4 - make a little menu that's going to have the data structure names - LL, BT, BST, etc

5 - Enhance the card with a slideout with a scrollable list of all the stats
